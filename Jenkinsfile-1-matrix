pipeline {
  agent none
  stages {
    stage('BuildAndTest') {
      matrix {
        agent {
          label "${PLATFORM}"
        }
        axes {
          axis {
            name 'PLATFORM'
            values 'node1', 'node2'
          }
        }
        stages {
          stage('Build') {
            steps {
              sh 'echo Do Build for $PLATFORM'
            }
          }
          stage('Test') {
            steps {
              sh 'echo Do Test for $PLATFORM'
            }
          }
        }
      }
    }
  }
  
  
  post {
   
   success {
      slackSend (channel: '#development-alerts', color: 'good', message: "SUCCESSFUL: Application CANARY the Branch tested is  $BranchName Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

 
    unstable {
      slackSend (channel: '#development-alerts', color: 'warning', message: "UNSTABLE: Application CANARY the Branch tested is  $BranchName Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

    failure {
      slackSend (channel: '#development-alerts', color: '#FF0000', message: "FAILURE: Application CANARY the Branch tested is  $BranchNameJob '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }
   
    cleanup {
      deleteDir()
    }
}
  
}
